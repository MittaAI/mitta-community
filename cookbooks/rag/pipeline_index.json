{
    "name": "steve",
    "nodes": [
        {
            "node": {
                "created": "Fri, 01 Dec 2023 17:25:53 GMT",
                "extras": {
                    "processor": "info_file",
                    "upload": true
                },
                "name": "copperhead",
                "node_id": "D6Lt5hFucHP6L",
                "processor": "info_file",
                "template_id": "WTEWEAV7sgnxV",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 17:23:50 GMT",
                "extras": {
                    "processor": "info_file",
                    "upload": true
                },
                "input_fields": [
                    {
                        "name": "filename",
                        "type": "string"
                    },
                    {
                        "name": "content_type",
                        "type": "string"
                    }
                ],
                "name": "celadon",
                "output_fields": [
                    {
                        "name": "content_type",
                        "type": "strings"
                    },
                    {
                        "name": "file_size_bytes",
                        "type": "ints"
                    },
                    {
                        "name": "ttl",
                        "type": "ints"
                    },
                    {
                        "name": "pdf_num_pages",
                        "type": "ints"
                    }
                ],
                "processor": "info_file",
                "template_id": "WTEWEAV7sgnxV",
                "text": "{# Use this template to drive a info processor that outputs file information. #}\n\n{# Define the input_fields used in this template #}\ninput_fields = [{'name': \"filename\", 'type': \"string\"},{'name': \"content_type\", 'type': \"string\"}]\n\n{# The output_fields expected from the node processor using this template %}\noutput_fields = [{'name': \"content_type\", 'type': \"strings\"},{'name': \"file_size_bytes\", 'type': \"ints\"},{'name': \"ttl\", 'type': \"ints\"},{'name': \"pdf_num_pages\", 'type': \"ints\"}]]\n\n{# Define the info_file processor #}\nextras = {\"processor\": \"info_file\", \"upload\": True}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 17:38:45 GMT",
                "extras": {
                    "processor": "jinja2"
                },
                "name": "myna",
                "node_id": "LfigqYm9p8spb",
                "processor": "jinja2",
                "template_id": "1TJ73FG5TR02P",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 17:36:19 GMT",
                "extras": {
                    "processor": "jinja2"
                },
                "input_fields": [
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "content_type",
                        "type": "strings"
                    },
                    {
                        "name": "pdf_num_pages",
                        "type": "int"
                    }
                ],
                "name": "russet",
                "output_fields": [
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "content_type",
                        "type": "strings"
                    },
                    {
                        "name": "page_number",
                        "type": "ints"
                    }
                ],
                "processor": "jinja2",
                "template_id": "1TJ73FG5TR02P",
                "text": "{# Async RAG pipeline template #2 - builds a list of pages for the file. #}\n\n{# Be sure to always use double quotes for keys and strings! #}\n\n{# Input Fields #}\ninput_fields = [{\"name\": \"filename\", \"type\": \"strings\"}, {\"name\": \"content_type\", \"type\": \"strings\"}, {\"name\": \"pdf_num_pages\", \"type\": \"int\"}]\n\n{# Output Fields #}\noutput_fields = [{\"name\": \"filename\", \"type\": \"strings\"}, {\"name\": \"content_type\", \"type\": \"strings\"}, {\"name\": \"page_number\", \"type\": \"ints\"}]\n\n{# Extras #}\nextras = {\"processor\": \"jinja2\"}\n\n{# Build three lists of equal size to use for deserialization in the pipeline #}\n{% set result = {\"filename\": [], \"content_type\": [], \"page_number\": []} %}\n\n{% for page_number in range(1, pdf_num_pages[0] + 1) %}\n  {% set _ = result.filename.append(filename[0]) %}\n  {% set _ = result.content_type.append(content_type[0]) %}\n  {% set _ = result.page_number.append(page_number) %}\n{% endfor %}\n\n{# Enforce proper quoting by running it through the tojson filter #}\n{{ result|tojson }}\n",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 17:47:23 GMT",
                "extras": {
                    "batch_size": "5",
                    "processor": "split_task"
                },
                "name": "lobster",
                "node_id": "zo3499ZioqrI8",
                "processor": "split_task",
                "template_id": "dvZo7Sm53zU3O",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 17:47:18 GMT",
                "extras": {
                    "batch_size": 2,
                    "processor": "split_task"
                },
                "input_fields": [
                    {
                        "name": "page_number",
                        "type": "ints"
                    },
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "content_type",
                        "type": "strings"
                    }
                ],
                "name": "prompt",
                "output_fields": [
                    {
                        "name": "page_number",
                        "type": "ints"
                    },
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "content_type",
                        "type": "strings"
                    }
                ],
                "processor": "split_task",
                "template_id": "dvZo7Sm53zU3O",
                "text": "{# Use this template with the split_task processor. #}\n\n{# The split_task processor spawns parallel tasks for a given set of keys with equal lengths. #}\n{# When used properly with an AI processor, it allows rapid inferencing of large amounts of data. #}\n\n{# The split_task processor requires input_fields and output_fields to be the same. #}\ninput_fields = [{'name': 'page_number', 'type': 'ints'}, {'name': 'filename', 'type': 'strings'}, {'name': 'content_type', 'type': 'strings'}]\n\noutput_fields = [{'name': 'page_number', 'type': 'ints'}, {'name': 'filename', 'type': 'strings'}, {'name': 'content_type', 'type': 'strings'}]\n\n{# The batch_size must be defined (or entered during node creation) and the recommended size is 20. }\nextras = {\"batch_size\": 2, \"processor\": \"split_task\"}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 17:45:04 GMT",
                "extras": {
                    "processor": "read_file"
                },
                "name": "ostrich",
                "node_id": "dn7MP325TXA13",
                "processor": "read_file",
                "template_id": "Sb3FQh2mulNAI",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 17:44:58 GMT",
                "extras": {
                    "processor": "read_file"
                },
                "input_fields": [
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "content_type",
                        "type": "strings"
                    },
                    {
                        "name": "page_number",
                        "type": "ints"
                    }
                ],
                "name": "carrot",
                "output_fields": [
                    {
                        "name": "texts",
                        "type": "strings"
                    }
                ],
                "processor": "read_file",
                "template_id": "Sb3FQh2mulNAI",
                "text": "{# Use this template to quickly read a PDF file and convert it to text #}\r\n{# This example will deserialize PDF text extraction. It should not be used with .txt files #}\r\n\r\n{# Input Fields #}\r\n{# The page_number array is a list of page numbers (ints) to read from the PDF #}\r\n{# The filename and content_type arrays need to be the same length as the page_number array #}\r\ninput_fields = [{\"name\": \"filename\", \"type\": \"strings\"},{\"name\": \"content_type\", \"type\": \"strings\"},{\"name\": \"page_number\", \"type\": \"ints\"}]\r\n\r\n{# Output Fields #}\r\noutput_fields = [{\"name\": \"texts\", \"type\": \"strings\"}]\r\n\r\n{# Extras \"page_chunk_size\" is used for .txt files only, to set page size #}\r\nextras = {\"processor\": \"read_file\"}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 18:45:53 GMT",
                "extras": {
                    "processor": "jinja2"
                },
                "name": "okapi",
                "node_id": "kzBVmgBDZw6Rn",
                "processor": "jinja2",
                "template_id": "QjMQfz61lEZJ1",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 18:27:23 GMT",
                "extras": {
                    "processor": "jinja2"
                },
                "input_fields": [
                    {
                        "name": "texts",
                        "type": "strings"
                    },
                    {
                        "name": "filename",
                        "type": "strings"
                    },
                    {
                        "name": "page_number",
                        "type": "ints"
                    }
                ],
                "name": "splendid",
                "output_fields": [
                    {
                        "name": "chunks",
                        "type": "strings"
                    },
                    {
                        "name": "page_nums",
                        "type": "ints"
                    },
                    {
                        "name": "chunk_nums",
                        "type": "ints"
                    },
                    {
                        "name": "filenames",
                        "type": "strings"
                    }
                ],
                "processor": "jinja2",
                "template_id": "QjMQfz61lEZJ1",
                "text": "{# This template creates chunks from page texts, which are passed in as a string per page. #}\n\n{# Extras #}\nextras = {\"processor\": \"jinja2\"}\n\n{# Input Fields #}\ninput_fields = [{'name': 'texts', 'type': 'strings'}, {'name': 'filename', 'type': 'strings'}, {'name': 'page_number', 'type': 'ints'}]\n\n{# Output Fields #}\noutput_fields = [{'name': 'chunks', 'type': 'strings'}, {'name': 'page_nums', 'type': 'ints'}, {'name': 'chunk_nums', 'type': 'ints'}, {'name': 'filenames', 'type': 'strings'}]\n\n{# call the chunker with current texts, filename list, and starting page number from page_number #}\n{% set data = chunk_with_page_filename(texts, filename[0], start_page=page_number[0], overlap=0) %}\n{\n    \"chunks\": {{ data.get('chunks')|tojson|safe }},\n    \"page_nums\": {{ data.get('page_nums')|tojson|safe }},\n    \"chunk_nums\": {{ data.get('chunk_nums')|tojson|safe }},\n    \"filenames\": {{ data.get('filenames')|tojson|safe }}\n}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 19:17:05 GMT",
                "extras": {
                    "iterate_field": "texts",
                    "model": "gpt-3.5-turbo-1106",
                    "num_keyterms": "5",
                    "openai_token": "[openai_token]",
                    "processor": "aidict"
                },
                "name": "peacock",
                "node_id": "CLZUgRER29EjG",
                "processor": "aidict",
                "template_id": "mufWPNffrfnv6",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 17:20:58 GMT",
                "extras": {
                    "iterate_field": "chunks",
                    "model": "gpt-3.5-turbo-1106",
                    "num_keyterms": 5,
                    "openai_token": "[openai_token]",
                    "processor": "aidict"
                },
                "input_fields": [
                    {
                        "name": "chunks",
                        "type": "strings"
                    }
                ],
                "name": "beige",
                "output_fields": [
                    {
                        "name": "keyterms",
                        "type": "strings"
                    }
                ],
                "processor": "aidict",
                "template_id": "mufWPNffrfnv6",
                "text": "{# Use this template to drive an OpenAI keyterm processor! #}\n\n{# Define the input_fields used in this template: #}\ninput_fields = [{'name': \"chunks\", 'type': \"strings\"}]\n\n{# The output_fields expected from the node processor using this template: #}\noutput_fields = [{'name': \"keyterms\", 'type': \"strings\"}]\n\n{# Extras #}\nextras = {'openai_token': None, 'model': 'gpt-3.5-turbo-1106', 'processor': 'aidict', 'num_keyterms': 5, 'iterate_field': \"chunks\"}\n\n{# Process the input string: #}\n# complete dict task by following step by step\n1. Inspect the following text:\n\"\"\"\n{{ chunks[outer_index] }}\n\"\"\"\n2. The required key for the dictionary is: 'keyterms'\n3. The required value for 'keyterms' is an array of ({num_keyterms}) strings.\n4. Create a concise list of ({{num_keyterms}}) keyterms from the text in step 1 and then follow step 2 and 3 to build the dictionary:\nai_dict = \n\n",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 19:24:29 GMT",
                "extras": {
                    "model": "instructor_xl",
                    "vector_size": 768
                },
                "name": "malkoha",
                "node_id": "Xs5kejl6TRbKL",
                "processor": "embedding",
                "template_id": "scfOJNAzeYTtk",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 19:24:21 GMT",
                "extras": {
                    "model": "instructor_xl",
                    "vector_size": 768
                },
                "input_fields": [
                    {
                        "name": "chunks",
                        "type": "strings"
                    }
                ],
                "name": "colossal",
                "output_fields": [
                    {
                        "name": "chunks_embedding",
                        "type": "vectors"
                    }
                ],
                "processor": "embedding",
                "template_id": "scfOJNAzeYTtk",
                "text": "{# Use this template to drive a Instructor XL embedding node processor! #}\n\n{# Input Fields #}\ninput_fields = [{'name': \"chunks\", 'type': \"strings\"}]\n\n{# Output Fields #}\noutput_fields = [{'name': \"chunks_embedding\", 'type': \"vectors\"}]\n\n{# Extras for embedding are vector_size: <size> and model: [instructor_large or instructor_xl] #}\nextras = {'vector_size': 768, 'model': \"instructor_xl\"}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        },
        {
            "node": {
                "created": "Fri, 01 Dec 2023 19:40:30 GMT",
                "extras": {
                    "processor": "write_fb",
                    "table": "rag"
                },
                "name": "owl",
                "node_id": "hJyzJDgQVSyTP",
                "processor": "write_fb",
                "template_id": "cfwt6YrsQ9bMS",
                "uid": "r2lAJyPcFb8owj6Ks"
            },
            "template": {
                "created": "Fri, 01 Dec 2023 19:35:28 GMT",
                "extras": {
                    "processor": "write_fb",
                    "table": null
                },
                "input_fields": [
                    {
                        "name": "chunks_embedding",
                        "type": "vectors"
                    },
                    {
                        "name": "chunks",
                        "type": "strings"
                    },
                    {
                        "name": "page_nums",
                        "type": "ints"
                    },
                    {
                        "name": "chunk_nums",
                        "type": "ints"
                    },
                    {
                        "name": "filenames",
                        "type": "strings"
                    },
                    {
                        "name": "keyterms",
                        "type": "stringset"
                    }
                ],
                "name": "angelic",
                "output_fields": null,
                "processor": "write_fb",
                "template_id": "cfwt6YrsQ9bMS",
                "text": "{# Use this template to write a PDF's chunks, page numbers, and filename to FeatureBase #}\n\n{# Input Fields #}\n{# We're looking for keys to save to the database. #}\ninput_fields = [{\"name\": \"chunks_embedding\", \"type\": \"vectors\"},{\"name\": \"chunks\", \"type\": \"strings\"}, {\"name\": \"page_nums\", \n\"type\": \"ints\"}, {\"name\": \"chunk_nums\", \"type\": \"ints\"}, {\"name\": \"filenames\", \"type\": \"strings\"}, {\"name\": \"keyterms\", \"type\": \"stringset\"}]\n\n{# Extras Fields #}\n{# Leave table as None so that it will populate during node creation. #}\nextras = {\"table\": None, \"processor\": \"write_fb\"}",
                "uid": "r2lAJyPcFb8owj6Ks"
            }
        }
    ],
    "pipe_id": "d3DWWvdNKjQlp"
}