{
    "pipe_id": "VPMRR1OsoNkyG",
    "name": "hn",
    "nodes": [
        {
            "node": {
                "created": "2023-12-12T20:56:05.741806",
                "extras": {
                    "processor": "read_uri",
                    "method": "GET",
                    "uri": "https://hn.algolia.com/api/v1/search_by_date?tags=story&hitsPerPage=50"
                },
                "name": "asp",
                "node_id": "DkupMxRQQIOrv",
                "processor": "read_uri",
                "template_id": "laYRXlJ77TNuj",
                "uid": "0kcas0aVtwkg6hNFh"
            },
            "template": {
                "created": "2023-12-12T15:07:47.623816",
                "extras": {
                    "processor": "read_uri",
                    "method": "GET",
                    "uri": "https://hn.algolia.com/api/v1/search_by_date?tags=story&hitsPerPage=50"
                },
                "input_fields": [],
                "name": "lovely",
                "output_fields": [
                    {
                        "name": "filename",
                        "type": "string"
                    },
                    {
                        "name": "content_type",
                        "type": "string"
                    }
                ],
                "processor": "read_uri",
                "template_id": "laYRXlJ77TNuj",
                "text": "{# Use this template to read a file from a URI #}\n\n{# Input Fields #}\n{# If the URI isn't working, try using filename and content_type + the uri #}\ninput_fields = []\n\n{# Output Fields must contain filename and content_type #}\noutput_fields = [{'name': 'filename', 'type': 'string'},{'name': 'content_type', 'type': 'string'}]\n\n{# Extras 'page_chunk_size' is used for .txt files only, to set page size #}\nextras = {\"processor\": \"read_uri\", \"method\": \"GET\", \"uri\": \"https://hn.algolia.com/api/v1/search_by_date?tags=story&hitsPerPage=50\"}",
                "uid": "0kcas0aVtwkg6hNFh"
            }
        },
        {
            "node": {
                "created": "2023-12-12T16:02:33.360579",
                "extras": {
                    "processor": "read_file"
                },
                "name": "chital",
                "node_id": "jDSXuDKSLpTgT",
                "processor": "read_file",
                "template_id": "xRpCP6pSOH1o5",
                "uid": "0kcas0aVtwkg6hNFh"
            },
            "template": {
                "created": "2023-12-12T16:02:27.877724",
                "extras": {
                    "processor": "read_file"
                },
                "input_fields": [
                    {
                        "name": "filename",
                        "type": "string"
                    },
                    {
                        "name": "content_type",
                        "type": "string"
                    }
                ],
                "name": "steel",
                "output_fields": [
                    {
                        "name": "texts",
                        "type": "strings"
                    }
                ],
                "processor": "read_file",
                "template_id": "xRpCP6pSOH1o5",
                "text": "{# Use this template to read a PDF or .txt file and convert it to text #}\n{# This example will serialze PDF processing. Use the deserialized PDF template for faster extraction. #}\n\n{# Input Fields #}\n{# These should not be changed, as they are provided by the task ingestion endpoint for file uploads. #}\ninput_fields = [{'name': 'filename', 'type': 'string'},{'name': 'content_type', 'type': 'string'}]\n\n{# Output Fields #}\noutput_fields = [{'name': 'texts', 'type': 'strings'}]\n\n{# Extras 'page_chunk_size' is used for .txt files only, to set page size #}\nextras = {\"processor\": \"read_file\"}",
                "uid": "0kcas0aVtwkg6hNFh"
            }
        },
        {
            "node": {
                "created": "2023-12-12T16:29:05.098529",
                "extras": {
                    "processor": "jinja2"
                },
                "name": "wombat",
                "node_id": "cEHJy9M5yRpJQ",
                "processor": "jinja2",
                "template_id": "mRUZZ9bg4nIpS",
                "uid": "0kcas0aVtwkg6hNFh"
            },
            "template": {
                "created": "2023-12-12T16:29:01.682750",
                "extras": {
                    "processor": "jinja2"
                },
                "input_fields": [
                    {
                        "name": "json_data",
                        "type": "dict"
                    }
                ],
                "name": "radical",
                "output_fields": [
                    {
                        "name": "authors",
                        "type": "strings"
                    },
                    {
                        "name": "points",
                        "type": "ints"
                    },
                    {
                        "name": "urls",
                        "type": "strings"
                    },
                    {
                        "name": "titles",
                        "type": "strings"
                    },
                    {
                        "name": "num_comments",
                        "type": "ints"
                    },
                    {
                        "name": "object_id",
                        "type": "ints"
                    }
                ],
                "processor": "jinja2",
                "template_id": "mRUZZ9bg4nIpS",
                "text": "{# This is a reference jinja2 processor template #}\n\n{# Input Fields #}\ninput_fields = [{\"name\": \"json_data\", \"type\": \"dict\"}]\n\n{# Output Fields #}\noutput_fields = [{\"name\": \"authors\", \"type\": \"strings\"},{\"name\": \"points\", \"type\": \"ints\"},{\"name\": \"urls\", \"type\": \"strings\"},{\"name\": \"titles\", \"type\": \"strings\"},{\"name\": \"num_comments\", \"type\": \"ints\"},{\"name\": \"object_id\", \"type\": \"ints\"}]\n\n{# Extras are required. #}\nextras = {\"processor\": \"jinja2\"}\n\n{% set authors = [] %}\n{% set points = [] %}\n{% set num_comments = [] %}\n{% set urls = [] %}\n{% set titles = [] %}\n{% set object_ids = [] %}\n\n{# json_data is always an array of whatevers #}\n{% for data in json_data %}\n    {% for item in data['hits'] %}\n        {% set _ = authors.append(item['author']) %}\n        {% set _ = points.append(item['points']) %}\n        {% set _ = urls.append(item['url']) %}\n        {% set _ = titles.append(item['title']) %}\n        {% set _ = num_comments.append(item['num_comments']) %}\n        {% set _ = num_comments.append(item['object_ids']) %}\n    {% endfor %}\n{% endfor %}\n\n{% set result_dict = {\n    'authors': authors,\n    'points': points,\n    'num_comments': num_comments,\n    'urls': urls,\n    'titles': titles,\n    'object_ids': object_ids\n} %}\n\n{{ result_dict|safe_tojson }}\n",
                "uid": "0kcas0aVtwkg6hNFh"
            }
        },
        {
            "node": {
                "created": "2023-12-12T21:36:27.008031",
                "extras": {
                    "system_prompt": "You are a bot that posts interesting news stories about AI and other technology.",
                    "processor": "aichat",
                    "openai_token": "[openai_token]",
                    "model": "gpt-3.5-turbo"
                },
                "name": "trogon",
                "node_id": "GtEYoo9hGsqrx",
                "processor": "aichat",
                "template_id": "lgLAk9nIzNqKE",
                "uid": "0kcas0aVtwkg6hNFh"
            },
            "template": {
                "created": "2023-12-12T21:36:21.916089",
                "extras": {
                    "system_prompt": "You are an assistant that posts interesting news stories about AI and other technology from HackerNews. You act as a user would.",
                    "processor": "aichat",
                    "openai_token": "[openai_token]",
                    "model": "gpt-3.5-turbo"
                },
                "input_fields": [
                    {
                        "name": "authors",
                        "type": "strings"
                    },
                    {
                        "name": "points",
                        "type": "ints"
                    },
                    {
                        "name": "num_comments",
                        "type": "ints"
                    },
                    {
                        "name": "urls",
                        "type": "strings"
                    },
                    {
                        "name": "titles",
                        "type": "ints"
                    }
                ],
                "name": "hidden",
                "output_fields": [
                    {
                        "name": "assistant_content",
                        "type": "strings"
                    }
                ],
                "processor": "aichat",
                "template_id": "lgLAk9nIzNqKE",
                "text": "{# Use this template to drive a generative chat processor. #}\n\n{# Define the input_fields used in this template; user_history alternates user,assistant,user,assistant.. #}\n{# Remove user_history if you don't want to use a history #}\ninput_fields = [{'name': \"authors\", 'type': \"strings\"},{'name': \"points\", 'type': \"ints\"},{'name': \"num_comments\", 'type': \"ints\"},{'name': \"urls\", 'type': \"strings\"},{'name': \"titles\", 'type': \"ints\"}]\n\n{# The output_fields expected from the node processor using this template #}\noutput_fields = [{'name': \"assistant_content\", 'type': \"strings\"}]\n\n{# Define the 'extras' for system_prompt  #}\nextras = {'system_prompt': \"You are an assistant that posts interesting news stories about AI and other technology from HackerNews. You act as a user would.\", 'processor': \"aichat\", 'openai_token': None, 'model': \"gpt-3.5-turbo\"}\n\nThe following stories were pulled from Hacker News:\n'''\n{% for i in range(points|length) %}\n    {% set point = points[i] %}\n    {% set num_comment = num_comments[i] %}\n    {% set title = titles[i] %}\n    {% set url = urls[i] %}\n    {% set author = authors[i] %}\n    {% set object_id = object_ids[i] %}\n    {{i}}. {{ title }} ({{ url }}) \n    {{ point }} point(s) by {{ author }} a while ago | {{ num_comment }} comment(s)\n    https://news.ycombinator.com/item?id={{object_id}} \n{% endfor %}\n'''\n\nPick a story from the list and write a post for it to Discord. Don't use headers, markup or any other labels for the data. Just write about it and post the link. You may mention it has a lot of comments, if it does. These are recent posts, so any with high points would be interesting.",
                "uid": "0kcas0aVtwkg6hNFh"
            }
        },
        {
            "node": {
                "created": "2023-12-11T19:40:09.996292",
                "extras": {
                    "processor": "callback",
                    "callback_uri": "https://mitta.ai/{{username}}/callback?token={{callback_token}}",
                    "callback_token": "[callback_token]"
                },
                "name": "ferret",
                "node_id": "nd2Rgp8Hv60oR",
                "processor": "callback",
                "template_id": "lFOJqIFkrFT28",
                "uid": "0kcas0aVtwkg6hNFh"
            },
            "template": {
                "created": "2023-12-11T19:40:04.834098",
                "extras": {
                    "processor": "callback",
                    "callback_uri": "[callback_uri]",
                    "callback_token": "[callback_token]"
                },
                "input_fields": null,
                "name": "fancy",
                "output_fields": [],
                "processor": "callback",
                "template_id": "lFOJqIFkrFT28",
                "text": "{# Welcome to the SlothAI Templating System. #}\n\n{# This template will be used to create a callback node. #}\n\n{# Next Tasks #}\n{# 1. Review this callback template then click on the 'Save' button. #}\n{# 2. Create a new template, then click the `Choose Template` pulldown and select `Generate random words'. #}\n\n{# Extras that have [callback_uri] or [callback_token] will be auto populated with local callback info. #}\nextras = {'processor': \"callback\", 'callback_uri': \"[callback_uri]\", 'callback_token': \"[callback_token]\"}\n\n{# Any output fields we define will be passed to the callback endpoint. #}\n{# If output fields is empty, all data will be sent to the callback endpoint. #}\noutput_fields = []",
                "uid": "0kcas0aVtwkg6hNFh"
            }
        }
    ]
}